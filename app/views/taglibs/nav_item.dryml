<!-- 
  The extension of nav-item implements an interface to the
  Permission/Role subsystem such that a positive permission in the
  form of AccessMenuItem will show the <nav-item> associated with 
  MenuItem (Use caution, the rails convention implies singular names,
  I've already been burnt using the permission "AccessStreetTypes" 
  which should have been "AccessStreetType") -->

<extend tag="nav-item">
  <% body = parameters.default
     body = h(this.to_s) if body.blank?
     name ||= body.gsub(/<.*?>/, '').strip    
     show_it = !(current_user.class == Guest)
    if show_it
      show_it = (name == 'Home') || 
                (name == 'Permissions') || 
                (name == 'Roles') || 
                ((name == 'Users') && (/admin/.match(parameters.inspect) != nil)) || # Patch so Users not exposed on primary menu.
                (name.include?(' Mode')) ||
                (this.to_s.blank?)
      if !show_it
        access = "current_user.canAccess" + this.to_s + "?"
        show_it = !(eval access).nil?
      end
      if show_it
        # See if the program has defined global variable $hide_tabs as
        # either a string (hides only the named tab) or an array of
        # strings (hides each of the tabs)
        if !$hide_tabs.nil?
          hide_tabs_type = $hide_tabs.class.name
          if hide_tabs_type == 'String'
            show_it = $hide_tabs.to_s != this.to_s
          elsif hide_tabs_type == 'Symbol'
            show_it = $hide_tabs.to_s != this.to_s
          elsif hide_tabs_type == 'Array'
            for x in $hide_tabs do
              show_it = x != this.to_s
              break if !show_it
            end 
          end
        end
      end
    end
  -%>
  
  <% if show_it %>
  <!--    <old-nav-item merge rel="&this.to_s"/> -->
  <li class="#{'current' if (c = scope.current_navigation) && c.downcase == name.downcase}"
      merge-attrs="&attributes - (attrs_for(:a)+['target'])">
    <a merge-attrs="&attributes & (attrs_for(:a)+['target'])" rel="&this.to_s"><%= body %></a>
  </li>
  <% else %>
    <old-nav-item merge style="display:none" />
  <% end %>
</extend>

<def tag="mode-nav-item">
  <% if current_user.respond_to?(:has_multiple_roles?) && current_user.has_multiple_roles?
    mode = "Set #{current_user.alternate_role} Mode" %> 
    <nav-item href="/user/toggle"><%= mode -%></nav-item>
  <% end %>
</def>

